@model PagedList.IPagedList<TblAdmin.Areas.Books.Models.Book>
@using PagedList.Mvc;

<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Books";
}

<h2>Books</h2>
@using (Html.BeginForm("Index", "Books", FormMethod.Get))
{
    <div class="row">
        <div class="col-sm-3">
            <div class="input-group">
                @Html.TextBox("searchString", ViewBag.SearchString as string, new { @class = "form-control" })
                <span class="input-group-btn">
                    <button type="submit" class="btn btn-default"><span class="glyphicon glyphicon-search"></span></button>
                </span>
            </div>
        </div>
    </div>
}
<p></p>
<p>
    @Html.ActionLink("Create New", "Create")
</p>

@helper SortGlyphicon(string sortOrder)
{ 
    if (sortOrder == "desc")
    {
        <span class="glyphicon glyphicon-sort-by-alphabet-alt"></span>
    }
    else
    {
        <span class="glyphicon glyphicon-sort-by-alphabet"></span>
    }
}
<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Publisher", "Index", new { searchString = ViewBag.SearchString, sortCol = "publisher", sortOrder = ViewBag.NextSortOrder, page = Model.PageNumber })
            @if (ViewBag.currentSortCol == "publisher")
            {
                @SortGlyphicon(ViewBag.CurrentSortOrder);
            }
        </th>
        <th>
            @Html.ActionLink("Name", "Index", new { searchString = ViewBag.SearchString, sortCol = "name", sortOrder = ViewBag.NextSortOrder, page = Model.PageNumber })
            @if (ViewBag.currentSortCol == "name")
            {
                @SortGlyphicon(ViewBag.CurrentSortOrder);
            }

        </th>
        <th>
            @Html.ActionLink("Created", "Index", new { searchString = ViewBag.SearchString, sortCol = "createdDate", sortOrder = ViewBag.NextSortOrder, page = Model.PageNumber })
            @if (ViewBag.currentSortCol == "createdDate")
            {
                @SortGlyphicon(ViewBag.CurrentSortOrder);
            }
        </th>
        <th>
            @Html.ActionLink("Modified", "Index", new { searchString = ViewBag.SearchString, sortCol = "modifiedDate", sortOrder = ViewBag.NextSortOrder, page = Model.PageNumber })
            @if (ViewBag.currentSortCol == "modifiedDate")
            {
                @SortGlyphicon(ViewBag.CurrentSortOrder);
            }
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Publisher.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CreatedDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ModifiedDate)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.ID }) |
            @Html.ActionLink("Details", "Details", new { id=item.ID }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.ID })
        </td>
    </tr>
}

</table>
<p>
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

    @Html.PagedListPager(
        Model,
        page => Url.Action(
            "Index",
            new { searchString = ViewBag.SearchString, sortCol = ViewBag.CurrentSortCol, sortOrder = ViewBag.CurrentSortOrder, page }))
</p>

