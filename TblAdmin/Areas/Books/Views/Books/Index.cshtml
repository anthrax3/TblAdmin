@using PagedList.Mvc;

@model TblAdmin.Areas.Books.ViewModels.IndexViewModel

<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Books";
}

<h2>Books</h2>
@using (Html.BeginForm(FormMethod.Get))
{
    <div class="row">
        <div class="col-sm-3">
            <div class="input-group">
                @Html.TextBoxFor(x => x.SearchString, Model.SearchString, new { @class = "form-control" })
                <span class="input-group-btn">
                    <button type="submit" class="btn btn-default"><span class="glyphicon glyphicon-search"></span></button>
                </span>
            </div>
        </div>
    </div>
}
<p></p>
<p>
    @Html.ActionLink("Create New", "Create")
</p>

@helper SortGlyphicon(string sortOrder)
{ 
    if (sortOrder == "desc")
    {
        <span class="glyphicon glyphicon-sort-by-alphabet-alt"></span>
    }
    else
    {
        <span class="glyphicon glyphicon-sort-by-alphabet"></span>
    }
}


<table class="table">
    <tr>
        <th>
            @if (Model.SortCol == "publisher")
            {
                @Html.ActionLink("Publisher", "Index", new { Model.SearchString, SortCol = "publisher", SortOrder = Model.NextSortOrder, Model.Page })
                @SortGlyphicon(Model.SortOrder)
            }
            else
            {
                @Html.ActionLink("Publisher", "Index", new { Model.SearchString, SortCol = "publisher", SortOrder = "asc", Model.Page }) 
            }
        </th>
        <th>
            @if (Model.SortCol == "name")
            {
                @Html.ActionLink("Name", "Index", new { Model.SearchString, SortCol = "name", SortOrder = Model.NextSortOrder, Model.Page })
                @SortGlyphicon(Model.SortOrder);
            }
            else
            {
                @Html.ActionLink("Name", "Index", new { Model.SearchString, SortCol = "name", SortOrder = "asc", Model.Page })
            }
        </th>
        <th>
            @if (Model.SortCol == "createdDate")
            {
                @Html.ActionLink("Created", "Index", new { Model.SearchString, SortCol = "createdDate", SortOrder = Model.NextSortOrder, Model.Page })
                @SortGlyphicon(Model.SortOrder);
            }
            else
            {
                @Html.ActionLink("Created", "Index", new { Model.SearchString, SortCol = "createdDate", SortOrder = "asc", Model.Page })
            
            }
        </th>
        <th>
            @if (ViewBag.SortCol == "modifiedDate")
            {
                @Html.ActionLink("Modified", "Index", new { Model.SearchString, SortCol = "modifiedDate", SortOrder = Model.NextSortOrder, Model.Page })
                @SortGlyphicon(Model.SortOrder);
            }
            else
            {
                @Html.ActionLink("Modified", "Index", new { Model.SearchString, SortCol = "modifiedDate", SortOrder = "asc", Model.Page })
                
            }
    </th>
        <th></th>
    </tr>

@foreach (var item in Model.Books) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Publisher.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CreatedDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ModifiedDate)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.ID }) |
            @Html.ActionLink("Details", "Details", new { id=item.ID }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.ID })
        </td>
    </tr>
}

</table>
<p>
    
    Page @(Model.Books.PageCount < Model.Books.PageNumber ? 0 : Model.Books.PageNumber) of @Model.Books.PageCount

    @Html.PagedListPager(
        Model.Books,
        page => Url.Action(
            "Index",
                new { Model.SearchString, Model.SortCol, Model.SortOrder, page = page }))
</p>

